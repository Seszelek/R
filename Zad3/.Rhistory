Sys.which("make")
install.packages("data.tree","formattable","DiagrammeR")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("data.tree","formattable","DiagrammeR")
install.packages("data.tree")
install.packages("formattable")
install.packages("DiagrammeR")
Download ahp_0.2.12.tar.gz
install.packages("C:\Program Files\R\R_ahp\ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("C:/Program Files/R/R_ahp/ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("C:/Users/asiat/Documents/R/R_projects/R_ahp/ahp_0.2.12.tar.gz",repos=NULL,type = "source")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("ahp_0.2.12.tar.gz",repos=NULL,type="source")
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(blockTools)
library(blockTools)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(DiagrammeR)
library(formattable)
library(data.tree)
library(ahp)
ahpFile <- system.file("extdata", "smartfony.ahp", package="ahp")
smartfonyAhp <- LoadFile(ahpFile)
smartfonyAhp <- Load(ahpFile)
q()
library(neuralnet)
normalize <- function(x) {return ((x - min(x)) / (max(x) - min(x))) }
x <- as.data.frame(runif(100, min = 1, max = 100)) 
result <- x^3 + 2*x
trainingData <- cbind(result, x) 
colnames(trainingData) <- c("Output", "Result")
maxmindf<- as.data.frame(lapply(trainingData, normalize)) 
net.price <- neuralnet(Result~Output, maxmindf, hidden = c(4, 5, 2), threshold = 0.01) 
plot(net.price) 
