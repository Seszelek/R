Sys.which("make")
install.packages("data.tree","formattable","DiagrammeR")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("data.tree","formattable","DiagrammeR")
install.packages("data.tree")
install.packages("formattable")
install.packages("DiagrammeR")
Download ahp_0.2.12.tar.gz
install.packages("C:\Program Files\R\R_ahp\ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("C:/Program Files/R/R_ahp/ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("C:/Users/asiat/Documents/R/R_projects/R_ahp/ahp_0.2.12.tar.gz",repos=NULL,type = "source")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("ahp_0.2.12.tar.gz",repos=NULL,type = "source")
install.packages("ahp_0.2.12.tar.gz",repos=NULL,type="source")
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
library(blockTools)
library(blockTools)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(DiagrammeR)
library(formattable)
library(data.tree)
library(ahp)
ahpFile <- system.file("extdata", "smartfony.ahp", package="ahp")
smartfonyAhp <- LoadFile(ahpFile)
smartfonyAhp <- Load(ahpFile)
q()
library(neuralnet)
normalize <- function(x) {return ((x - min(x)) / (max(x) - min(x))) }
setwd("C:/Users/asiat/Documents/R/Zad3")
sm <- read.csv("smartfony.csv")
sm
sm
price <- normalize(sm$cena)
price
display <- normalize(sm$wyswietlacz)
ram <- normalize(sm$pamiec_ram)
drive <- normalize(sm$pamiec_wbudowana)
sm <- sm[-,1]
sm <- sm[,1]
sm
sm <- read.csv("smartfony.csv")
sm
sm <- sm[,-1]
sm
sm <- sm[,-4]
sm
sm <- sm[,-5]
sm <- sm[,-5]
sm <- sm[,-5]
sm
sm <-cbind(sm, price, display, ram, drive)
net.price <-neuralnet(price~display+ram+drive, sm, hidden=c(4,2,3), threshold = 0.01)
plot(net.price)
library(neuralnet)
normalize <- function(x) {return ((x - min(x)) / (max(x) - min(x))) }
setwd("C:/Users/asiat/Documents/R/Zad3")
sm <- read.csv("smartfony.csv")
price <- normalize(sm$cena)
display <- normalize(sm$wyswietlacz)
ram <- normalize(sm$pamiec_ram)
drive <- normalize(sm$pamiec_wbudowana)
sm <- sm[,-1]
sm <- sm[,-4]
sm <- sm[,-5]
sm <- sm[,-5]
sm <- sm[,-5]
sm
sm <-cbind(sm, price, display, ram, drive)
net.price <-neuralnet(price~display+ram+drive, sm, hidden=c(4,2,3), threshold = 0.01)
plot(net.price)
